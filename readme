
To run the code locally, please follow below steps

1- Install python in your local machine
2- open the source code in visual studio code
3- in VS code menu click on view tab and open the terminal 
then run the commands one be one-  
4- python -m venv venv 
5- venv\Scripts\activate
6- pip install -r requirements.txt

once all packages are isntalled then run below command to start the app-
uvicorn main:app --host 0.0.0.0 --port 8000 --reload

and then go to chrome browser and paste the belwo url 

http://localhost:8000/docs

Click on downward arrow button located in the same line towards right of the Post /Predict API, after clicking teh downward arrow it will show the api, now click on "try it out" button

and then pass the below smaple input json or testing, 

Here is the 2 sample input jsons -

1- For diabetics prediction == yes, use below

{
  "Pregnancies": 6,
  "Glucose": 148,
  "BloodPressure": 72,
  "SkinThickness": 35,
  "Insulin": 0,
  "BMI": 33.6,
  "DiabetesPedigreeFunction": 0.627,
  "Age": 50
}
 
 2- For diabetics prediction == no, use below

{
  "Pregnancies": 1,
  "Glucose": 85,
  "BloodPressure": 66,
  "SkinThickness": 29,
  "Insulin": 0,
  "BMI": 26.6,
  "DiabetesPedigreeFunction": 0.351,
  "Age": 31
}

Note: 
main.py contains the logic for running the API with one person input data and trigger the trained model to get the result
however, train_model.py contains the logic for training data and then and repacking the model and save the updated trained model into model.pkl, scaler.pkl and imputer.pkl files

To run the train_model,py localy, please follow below steps [TBD]

To deploy in CloudRun, please refer below steps- 

# Authenticate:
gcloud auth login
gcloud config set project dark-bit-459802-t7

# Enable APIs:
gcloud services enable run.googleapis.com artifactregistry.googleapis.com aiplatform.googleapis.com

## create repository, run below command in google cloud shell
gcloud artifacts repositories create predictive-fastapi-repo --repository-format=docker --location=us-central1

# run below command in google cloud shell
  gcloud projects add-iam-policy-binding dark-bit-459802-t7 --member="serviceAccount:github-actions-deployer@dark-bit-459802-t7.iam.gserviceaccount.com" 
  --role="roles/artifactregistry.writer"

# run below command in google cloud shell
export PROJECT_ID="dark-bit-459802-t7"
export DEPLOYER_SA="github-actions-deployer@$PROJECT_ID.iam.gserviceaccount.com"
export COMPUTE_SA="$(gcloud projects describe $PROJECT_ID --format='value(projectNumber)')-compute@developer.gserviceaccount.com"

gcloud iam service-accounts add-iam-policy-binding $COMPUTE_SA \
  --member="serviceAccount:$DEPLOYER_SA" \
  --role="roles/iam.serviceAccountUser"


# Run via Google Cloud Shell (No setup required)
Go to: https://shell.cloud.google.com

chmod +x setup_github_secrets.sh
./setup_github_secrets.sh


# additional step-
Step 2: Re-generate the Key & Base64 Encode
Sometimes malformed or expired keys cause this issue.

✅ Create a new key:
gcloud iam service-accounts keys create key.json \
  --iam-account=github-actions-deployer@dark-bit-459802-t7.iam.gserviceaccount.com

✅ Encode it:
base64 -w 0 key.json
Copy this single-line base64 string into your GitHub secret: GCP_SA_KEY

Replace the old one via:

GitHub → Repo → Settings → Secrets → GCP_SA_KEY → Update value

# Rebuild and Re-Test Locally
docker build -t predictive-api-test .
docker run -p 8080:8080 predictive-api-test
✅ You should now see Uvicorn successfully start and be listening on http://0.0.0.0:8080.


